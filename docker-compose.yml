version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: wanderwise-db
    restart: always
    environment:
      POSTGRES_DB: wanderwise
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wanderwise-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Spring Boot Service
  backend:
    build: ./Backend
    container_name: wanderwise-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      frontend.origin: ${FRONTEND_URL}
      backend-url: ${BACKEND_URL}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/wanderwise
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8080
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: ${BACKEND_DOMAIN_URL}/login/oauth2/code/google
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      PYTHON_TRAVEL_SERVICE_URL: http://travel-service:5001
      # Email Configuration
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ${EMAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${EMAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST: smtp.gmail.com
      SPRING_MAIL_PROPERTIES_MAIL_DEBUG: "true"

      #File upload config
      FILE_UPLOAD_DIR: /app/uploads
    volumes:
      - ./uploads:/app/uploads
    ports:
      - "8080:8080"
    networks:
      - wanderwise-network

  # Frontend React Service
  frontend:
    build: ./Frontend
    container_name: wanderwise-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:80"
    volumes:
      - ./uploads:/usr/share/nginx/html/uploads
    networks:
      - wanderwise-network
    # environment:
    #   - REACT_APP_API_URL=${REACT_APP_API_URL}
  # Python Travel Service
  travel-service:
    build: ./travel-service
    container_name: wanderwise-travel-service
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/wanderwise
      DATABASE_FILE: database.json
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENTRIPMAP_API_KEY: ${OPENTRIPMAP_API_KEY}
      ORS_API_KEY: ${ORS_API_KEY}

    ports:
      - "5001:5001"
    networks:
      - wanderwise-network

networks:
  wanderwise-network:
    driver: bridge

volumes:
  postgres_data:
  # app_uploads: