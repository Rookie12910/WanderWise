version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: wanderwise-db
    restart: always
    environment:
      POSTGRES_DB: wanderwise
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wanderwise-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Spring Boot Service
  backend:
    build: ./Backend
    container_name: wanderwise-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      frontend.origin: ${FRONTEND_URL}
      # frontend.origin: http://frontend ( did not work :'3 )
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/wanderwise
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - wanderwise-network

  # Frontend React Service
  frontend:
    build: ./Frontend
    container_name: wanderwise-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - wanderwise-network
    # environment:
    #   - REACT_APP_API_URL=${REACT_APP_API_URL}


networks:
  wanderwise-network:
    driver: bridge

volumes:
  postgres_data: